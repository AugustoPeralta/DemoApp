# File: pull_request.yaml

#parameters:
#  - name: 'package'
#    default: false

jobs:
  - job: Build
    steps:
      # Build artifacts
      - script: yarn
        displayName: Install Packages
#      - script: yarn lint
#        displayName: linting
      - script: yarn test
        displayName: unit testing
      - script: yarn build
        displayName: build
      # - script: yarn start:container && yarn test-integration
      #   displayName: IntegrationTest

  - job: Package
#    condition: and(succeeded(), eq(variables['package'], true))
    steps:
      # Run to package
      - script: yarn install
        displayName: prune dependencies
      - script: cp -R node_modules ./dist
        displayName: copy node modules
      - script: yarn zip
      # publish package as artifact
      - task: PublishPipelineArtifact@1
        displayName: publish package
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'build.zip'
    
    
    
    
    
    
    
    
    
    jobs:
      - job: build
        displayName: build
        steps:
        - task: Npm@1
          inputs:
            verbose: "false"

#        - task: Npm@1
#          inputs:
#            command: "custom"
#            workingDir: "Tests"
#            verbose: "false"
#            customCommand: "run report"

        - task: Npm@1
          inputs:
            command: "custom"
            verbose: "false"
            customCommand: "install -g azure-functions-pack"

#        - task: PublishTestResults@2
#          inputs:
#            testResultsFiles: "test-results.xml"

        #- task: Npm@1
        #  inputs:
        #    command: "custom"
        #    verbose: "false"
        #    customCommand: "run security-check"

        - task: Npm@1
          inputs:
            command: "custom"
            verbose: "false"
            customCommand: "run lint"

        - task: Npm@1
          inputs:
            command: "custom"
            verbose: "false"
            customCommand: "run pack"

        - task: DeleteFiles@1
          inputs:
            Contents: "node_modules"

        - task: DeleteFiles@1
          inputs:
            Contents: "Tests"

        - task: CopyFiles@2
          inputs:
            TargetFolder: "$(Build.ArtifactStagingDirectory)/functionapp"

        - task: ArchiveFiles@1
          inputs:
            rootFolder: "$(Build.ArtifactStagingDirectory)/FunctionApp"
            includeRootFolder: "false"
            archiveFile: "$(Build.ArtifactStagingDirectory)/FunctionApp-$(_NEXT_RELEASE_TAG).zip"

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: "$(Build.ArtifactStagingDirectory)/FunctionApp-$(_NEXT_RELEASE_TAG).zip"
            ArtifactName: "drop"
            ArtifactType: "Container"
